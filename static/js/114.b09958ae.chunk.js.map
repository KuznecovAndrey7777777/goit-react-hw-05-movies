{"version":3,"file":"static/js/114.b09958ae.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/api.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 15px;\n  display: flex;\n  padding: 0;\n`;\n\nexport const Card = styled.li`\n  border-radius: 12px;\n  width: 300px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  margin-top: 10px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 12px;\n  width: 300px;\n  height: 450px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Img, List, Title, Card } from './MoviesList.styled';\nimport img from '../../img/error.jpeg';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Card key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w400${poster_path}`\n                    : img\n                }\n                alt={title}\n              />\n              <Title>{title}</Title>\n            </Link>\n          </Card>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '032dc0b996a75e755df2ef4834f02f4f';\n\nexport async function getTrendingMovies() {\n  const url = `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const url = `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  const url = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  const url = `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  text-align: center;\n  font-weight: 600;\n  font-size: 32px;\n  color: #e74c3c;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorText } from './Error.styled';\n\nconst Error = ({ errorText }) => {\n  return <ErrorText>{errorText}</ErrorText>;\n};\n\nError.propTypes = {\n  errorText: PropTypes.string,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 300px;\n  background-color: #ecf0f1;\n  border-radius: 4px;\n  overflow: hidden;\n  margin: 0 auto;\n  margin-bottom: 18px;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #3498db;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding: 10px;\n  ::placeholder {\n    font: inherit;\n    font-size: 14px;\n  }\n`;\n","import { FormButton, Form, FormInput } from './SearchForm.styled';\nimport { useState } from 'react';\nimport { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ setParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.trim().toLowerCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setParams(query);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormInput type=\"text\" name=\"search\" onChange={handleChange} />\n      <FormButton type=\"submit\">\n        <FcSearch size=\"30\" />\n      </FormButton>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  setParams: PropTypes.func.isRequired,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../../components/api';\nimport Error from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [totalResults, setTotalResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n    const startFetching = async () => {\n      setLoading(true);\n      try {\n        const { results, total_results } = await getMovieByQuery(query);\n        setMovies(results);\n        setTotalResults(total_results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    startFetching();\n  }, [query]);\n  const setParams = query => {\n    const params = query !== '' ? { query } : {};\n    setSearchParams(params);\n  };\n  return (\n    <div>\n      <SearchForm setParams={setParams} />\n      {loading && <Loader />}\n      {movies && !loading && <MoviesList movies={movies} />}\n      {totalResults === 0 && (\n        <Error errorText={'Вибачте, за вашим запитом нічого не знайдено'} />\n      )}\n      {error && (\n        <Error\n          errorText={`Щось пішло не так... ${error}. Будь ласка спробуйте ще раз.`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","Title","_templateObject3","Img","_templateObject4","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","_jsxs","Link","to","concat","state","from","src","img","alt","MAIN_URL","API_KEY","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","url","response","_context","prev","next","axios","sent","abrupt","data","t0","console","log","stop","getMovieById","_x","_getMovieById","_callee2","_context2","getMovieCast","_x2","_getMovieCast","_callee3","_context3","cast","getMovieReview","_x3","_getMovieReview","_callee4","_context4","results","getMovieByQuery","_x4","_getMovieByQuery","_callee5","query","_context5","ErrorText","errorText","Form","FormButton","FormInput","setParams","_useState","useState","_useState2","_slicedToArray","setQuery","onSubmit","e","preventDefault","type","name","onChange","target","value","trim","toLowerCase","FcSearch","size","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setMovies","_useState3","_useState4","totalResults","setTotalResults","_useState5","_useState6","error","setError","_useState7","_useState8","loading","setLoading","get","useEffect","startFetching","_yield$getMovieByQuer","total_results","message","finish","SearchForm","Loader","MoviesList","Error"],"sourceRoot":""}