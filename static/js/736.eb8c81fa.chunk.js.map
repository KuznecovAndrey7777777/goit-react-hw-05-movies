{"version":3,"file":"static/js/736.eb8c81fa.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  text-align: center;\n  justify-content: space-evenly;\n\n  > li {\n    width: 200px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 200px;\n  height: 300px;\n  display: block;\n  border-radius: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../api';\nimport img from '../../img/error.jpeg';\nimport { List, Poster } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [infoCast, setInfoCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await getMovieCast(id);\n        setInfoCast(castData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  return (\n    <div>\n      <List>\n        {infoCast.map(({ profile_path, name, character, cast_id }) => (\n          <li key={cast_id}>\n            <Poster\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : img\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            {character && (\n              <p>\n                <span>Character:</span>\n                {character}\n              </p>\n            )}\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '032dc0b996a75e755df2ef4834f02f4f';\n\nexport async function getTrendingMovies() {\n  const url = `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const url = `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  const url = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  const url = `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","id","useParams","_useState","useState","_useState2","_slicedToArray","infoCast","setInfoCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","getMovieCast","sent","t0","console","error","stop","apply","arguments","_jsx","children","map","_ref2","profile_path","name","character","cast_id","_jsxs","src","concat","img","alt","MAIN_URL","API_KEY","getTrendingMovies","_getTrendingMovies","url","response","axios","abrupt","data","log","getMovieById","_x","_getMovieById","_callee2","_context2","_x2","_getMovieCast","_callee3","_context3","cast","getMovieReview","_x3","_getMovieReview","_callee4","_context4","results","getMovieByQuery","_x4","_getMovieByQuery","_callee5","query","_context5"],"sourceRoot":""}